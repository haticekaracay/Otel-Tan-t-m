yorum.xhtml tarafı
<pre>Page #{yorum.page} of #{yorum.pageCount}</pre>
                            <div class="btn-group">
                                <h:commandButton action="#{yorum.previous()}" value="Previous" styleClass="btn-outline-dark"/>
                               <h:commandButton action="#{yorum.next()}" value="Next" styleClass="btn-outline-dark"/>
                            </div>

yorumController

private int page=1;
    private int pageSize=10;
    private int pageCount;
    public void next(){
        if(this.page==this.getPageCount())
            this.page=1;
        else
         this.page++;
    }
    public void previous(){
        if(this.page==1)
            this.page=this.getPageCount();
        else
         this.page--;
    }

    public int getPage() {
        return page;
    }

    public void setPage(int page) {
        this.page = page;
    }

    public int getPageSize() {
        return pageSize;
    }

    public void setPageSize(int pageSize) {
        this.pageSize = pageSize;
    }

    public int getPageCount() {
        
        this.pageCount=(int)Math.ceil(this.getyDAO().count()/(double)pageSize);
        return pageCount;
    }

    public void setPageCount(int pageCount) {
        this.pageCount = pageCount;
    }
    
    yorumDAO
 public ArrayList<yorum> find(int page,int pageSize){
         this.yorumlist=new ArrayList();
        Connection con =ConnectionManager.getConnection();
         int start=(page-1)*pageSize;
        try{
        PreparedStatement pst=con.prepareStatement("select * from yorum order by yorumID asc limit"+start+","+pageSize);
        ResultSet rs=pst.executeQuery();
        while(rs.next()){
        yorum y=new yorum();
        y.setYorumID(rs.getLong("yorumID"));
        y.setKisiAdi(rs.getString("kisiAdi"));
        y.setKisiSoyadi(rs.getString("kisiSoyadi"));
        y.setKisiMail(rs.getString("kisiMail"));
        
        y.setYorumY(rs.getString("yorumY"));
        y.setOtl(this.getOtlDao().getOtl(rs.getLong("otelID")));
        yorumlist.add(y);
            }
        }
        catch(SQLException ex){
            System.out.println(ex.getMessage());
            
        }
        return this.yorumlist;
    }
      public int count(){
         int count=0;
        Connection con =ConnectionManager.getConnection();
        try{
        PreparedStatement pst=con.prepareStatement("select count(yorumID) as yorum_count from yorum ");
        ResultSet rs=pst.executeQuery();
        rs.next();
        count=rs.getInt("yorum_count");
        }
        catch(SQLException ex){
            System.out.println(ex.getMessage());
            
        }
        return count;
    }



 ResultSet rs = null;
            String sayi = (String) jSpinner1.getValue().toString();
            int degisken = Integer.parseInt(sayi);
            int say = 18;//sayfalama için..
            if (degisken == -1) {
                rs = st1.executeQuery("select sicil from personel where statu='"+kid+"' order by sicil asc ");
            } else {
                int deneme = say * degisken;
                rs = st1.executeQuery("select sicil from personel where statu='"+kid+"' order by sicil asc  offset '" + deneme + "'"
                        + "rows fetch first " + say + "rows only");
            }